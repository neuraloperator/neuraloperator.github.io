
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/training/checkpoint_FNO_darcy.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_training_checkpoint_FNO_darcy.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_training_checkpoint_FNO_darcy.py:


Checkpointing and loading training states
=========================================

Demonstrating the ``Trainer``'s saving and loading functionality, 
which makes it easy to checkpoint and resume training states.

.. GENERATED FROM PYTHON SOURCE LINES 11-17

.. raw:: html

   <div style="margin-top: 3em;"></div>

Import dependencies
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 17-31

.. code-block:: Python


    import torch
    import matplotlib.pyplot as plt
    import sys
    from neuralop.models import FNO
    from neuralop import Trainer
    from neuralop.training import AdamW
    from neuralop.data.datasets import load_darcy_flow_small
    from neuralop.utils import count_model_params
    from neuralop import LpLoss, H1Loss

    device = 'cpu'



.. GENERATED FROM PYTHON SOURCE LINES 32-38

.. raw:: html

   <div style="margin-top: 3em;"></div>

Loading the Darcy-Flow dataset
------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 38-45

.. code-block:: Python

    train_loader, test_loaders, data_processor = load_darcy_flow_small(
            n_train=1000, batch_size=32, 
            test_resolutions=[16, 32], n_tests=[100, 50],
            test_batch_sizes=[32, 32],
    )



.. GENERATED FROM PYTHON SOURCE LINES 46-52

.. raw:: html

   <div style="margin-top: 3em;"></div>

Creating the FNO model
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 52-68

.. code-block:: Python


    model = FNO(n_modes=(16, 16),
                 in_channels=1, 
                 out_channels=1, 
                 hidden_channels=32, 
                 projection_channel_ratio=2, 
                 factorization='tucker', 
                 rank=0.42)

    model = model.to(device)

    n_params = count_model_params(model)
    print(f'\nOur model has {n_params} parameters.')
    sys.stdout.flush()



.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. raw:: html

   <div style="margin-top: 3em;"></div>

Creating the optimizer and scheduler
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 75-81

.. code-block:: Python

    optimizer = AdamW(model.parameters(), 
                                    lr=8e-3, 
                                    weight_decay=1e-4)
    scheduler = torch.optim.lr_scheduler.CosineAnnealingLR(optimizer, T_max=30)



.. GENERATED FROM PYTHON SOURCE LINES 82-88

.. raw:: html

   <div style="margin-top: 3em;"></div>

Creating the losses
------------------

.. GENERATED FROM PYTHON SOURCE LINES 88-95

.. code-block:: Python

    l2loss = LpLoss(d=2, p=2)
    h1loss = H1Loss(d=2)

    train_loss = h1loss
    eval_losses={'h1': h1loss, 'l2': l2loss}



.. GENERATED FROM PYTHON SOURCE LINES 96-102

.. raw:: html

   <div style="margin-top: 3em;"></div>

Displaying configuration
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 102-112

.. code-block:: Python


    print('\n### MODEL ###\n', model)
    print('\n### OPTIMIZER ###\n', optimizer)
    print('\n### SCHEDULER ###\n', scheduler)
    print('\n### LOSSES ###')
    print(f'\n * Train: {train_loss}')
    print(f'\n * Test: {eval_losses}')
    sys.stdout.flush()



.. GENERATED FROM PYTHON SOURCE LINES 113-119

.. raw:: html

   <div style="margin-top: 3em;"></div>

Creating the trainer
--------------------

.. GENERATED FROM PYTHON SOURCE LINES 119-128

.. code-block:: Python

    trainer = Trainer(model=model, n_epochs=20,
                      device=device,
                      data_processor=data_processor,
                      wandb_log=False,
                      eval_interval=3,
                      use_distributed=False,
                      verbose=True)



.. GENERATED FROM PYTHON SOURCE LINES 129-136

.. raw:: html

   <div style="margin-top: 3em;"></div>

Training the model
------------------
We train and save checkpoints

.. GENERATED FROM PYTHON SOURCE LINES 136-164

.. code-block:: Python


    trainer.train(train_loader=train_loader,
                  test_loaders={},
                  optimizer=optimizer,
                  scheduler=scheduler, 
                  regularizer=False, 
                  training_loss=train_loss, 
                  save_every=1,
                  save_dir="./checkpoints")


    # .. resume_from_dir:
    # resume training from saved checkpoint at epoch 10

    trainer = Trainer(model=model, n_epochs=20,
                      device=device,
                      data_processor=data_processor,
                      wandb_log=False,
                      eval_interval=3,
                      use_distributed=False,
                      verbose=True)

    trainer.train(train_loader=train_loader,
                  test_loaders={},
                  optimizer=optimizer,
                  scheduler=scheduler, 
                  regularizer=False, 
                  training_loss=train_loss,
                  resume_from_dir="./checkpoints")

.. _sphx_glr_download_auto_examples_training_checkpoint_FNO_darcy.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: checkpoint_FNO_darcy.ipynb <checkpoint_FNO_darcy.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: checkpoint_FNO_darcy.py <checkpoint_FNO_darcy.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: checkpoint_FNO_darcy.zip <checkpoint_FNO_darcy.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
