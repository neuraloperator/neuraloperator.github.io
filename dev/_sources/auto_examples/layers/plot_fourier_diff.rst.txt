
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/layers/plot_fourier_diff.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_layers_plot_fourier_diff.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_layers_plot_fourier_diff.py:


.. _fourier_diff :

Fourier Differentiation
========================================================
An example of usage of our Fourier Differentiation Function on 1d data.

.. GENERATED FROM PYTHON SOURCE LINES 10-13

Import the library
------------------
We first import our `neuralop` library and required dependencies.

.. GENERATED FROM PYTHON SOURCE LINES 13-22

.. code-block:: Python

    import torch
    import numpy as np
    import matplotlib.pyplot as plt
    from neuralop.losses.fourier_diff import fourier_derivative_1d

    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")










.. GENERATED FROM PYTHON SOURCE LINES 23-26

Creating an example of periodic 1D curve
--------------------
Here we consider sin(x) and cos(x), which are periodic on the interval [0,2pi]

.. GENERATED FROM PYTHON SOURCE LINES 26-31

.. code-block:: Python

    L = 2*torch.pi
    x = torch.linspace(0, L, 101)[:-1]
    f = torch.stack([torch.sin(x), torch.cos(x)], dim=0)
    x_np = x.cpu().numpy()








.. GENERATED FROM PYTHON SOURCE LINES 32-35

Differentiate the signal
-----------------------------------------
We use the Fourier differentiation function to differentiate the signal

.. GENERATED FROM PYTHON SOURCE LINES 35-40

.. code-block:: Python

    dfdx = fourier_derivative_1d(f, order=1, L=L)
    df2dx2 = fourier_derivative_1d(f, order=2, L=L)
    df3dx3 = fourier_derivative_1d(f, order=3, L=L)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/neuraloperator/neuraloperator/neuralop/losses/fourier_diff.py:76: UserWarning: Consider using Fourier continuation if the input is not periodic (use_FC=True).
      warnings.warn("Consider using Fourier continuation if the input is not periodic (use_FC=True).", category=UserWarning)




.. GENERATED FROM PYTHON SOURCE LINES 41-43

Plot the results for sin(x)
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 43-54

.. code-block:: Python

    plt.figure()
    plt.plot(x_np, dfdx[0].squeeze().cpu().numpy(), label='Fourier dfdx')
    plt.plot(x_np, np.cos(x_np), '--', label='dfdx')
    plt.plot(x_np, df2dx2[0].squeeze().cpu().numpy(), label='Fourier df2dx2')
    plt.plot(x_np, -np.sin(x_np), '--', label='df2dx2')
    plt.plot(x_np, df3dx3[0].squeeze().cpu().numpy(), label='Fourier df3dx3')
    plt.plot(x_np, -np.cos(x_np), '--', label='df3dx3')
    plt.xlabel('x')
    plt.legend()
    plt.show()




.. image-sg:: /auto_examples/layers/images/sphx_glr_plot_fourier_diff_001.png
   :alt: plot fourier diff
   :srcset: /auto_examples/layers/images/sphx_glr_plot_fourier_diff_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 55-57

Plot the results for cos(x)
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 57-70

.. code-block:: Python

    plt.figure()
    plt.plot(x_np, dfdx[1].squeeze().cpu().numpy(), label='Fourier dfdx')
    plt.plot(x_np, -np.sin(x_np), '--', label='dfdx')
    plt.plot(x_np, df2dx2[1].squeeze().cpu().numpy(), label='Fourier df2dx2')
    plt.plot(x_np, -np.cos(x_np), '--', label='df2dx2')
    plt.plot(x_np, df3dx3[1].squeeze().cpu().numpy(), label='Fourier df3dx3')
    plt.plot(x_np, np.sin(x_np), '--', label='df3dx3')
    plt.xlabel('x')
    plt.legend()
    plt.show()
        
        
        



.. image-sg:: /auto_examples/layers/images/sphx_glr_plot_fourier_diff_002.png
   :alt: plot fourier diff
   :srcset: /auto_examples/layers/images/sphx_glr_plot_fourier_diff_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 71-74

Creating an example of non-periodic 1D curve
--------------------
Here we consider sin(16x)-cos(8x) and exp(-0.8x)+sin(x)

.. GENERATED FROM PYTHON SOURCE LINES 74-79

.. code-block:: Python

    L = 2*torch.pi
    x = torch.linspace(0, L, 101)[:-1]    
    f = torch.stack([torch.sin(3*x) - torch.cos(x), torch.exp(-0.8*x)+torch.sin(x)], dim=0)
    x_np = x.cpu().numpy()








.. GENERATED FROM PYTHON SOURCE LINES 80-83

Differentiate the signal
-----------------------------------------
We use the Fourier differentiation function with Fourier continuation to differentiate the signal

.. GENERATED FROM PYTHON SOURCE LINES 83-87

.. code-block:: Python

    dfdx = fourier_derivative_1d(f, order=1, L=L, use_FC='Legendre', FC_d=4, FC_n_additional_pts=30, FC_one_sided=False)
    df2dx2 = fourier_derivative_1d(f, order=2, L=L, use_FC='Legendre', FC_d=4, FC_n_additional_pts=30, FC_one_sided=False)

     







.. GENERATED FROM PYTHON SOURCE LINES 88-90

Plot the results for sin(16x)-cos(8x)
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 90-99

.. code-block:: Python

    plt.figure()
    plt.plot(x_np, dfdx[0].squeeze().cpu().numpy(), label='Fourier dfdx')
    plt.plot(x_np, 3*torch.cos(3*x) + torch.sin(x), '--', label='dfdx')
    plt.plot(x_np, df2dx2[0].squeeze().cpu().numpy(), label='Fourier df2dx2')
    plt.plot(x_np, -9*torch.sin(3*x) + torch.cos(x), '--', label='df2dx2')
    plt.xlabel('x')
    plt.legend()
    plt.show()




.. image-sg:: /auto_examples/layers/images/sphx_glr_plot_fourier_diff_003.png
   :alt: plot fourier diff
   :srcset: /auto_examples/layers/images/sphx_glr_plot_fourier_diff_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 100-102

Plot the results for exp(-0.8x)+sin(x)
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 102-109

.. code-block:: Python

    plt.figure()
    plt.plot(x_np, dfdx[1].squeeze().cpu().numpy(), label='Fourier dfdx')
    plt.plot(x_np, -0.8*torch.exp(-0.8*x)+torch.cos(x), '--', label='dfdx')
    plt.plot(x_np, df2dx2[1].squeeze().cpu().numpy(), label='Fourier df2dx2')
    plt.plot(x_np, 0.64*torch.exp(-0.8*x)-torch.sin(x), '--', label='df2dx2')
    plt.xlabel('x')
    plt.legend()
    plt.show()


.. image-sg:: /auto_examples/layers/images/sphx_glr_plot_fourier_diff_004.png
   :alt: plot fourier diff
   :srcset: /auto_examples/layers/images/sphx_glr_plot_fourier_diff_004.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.296 seconds)


.. _sphx_glr_download_auto_examples_layers_plot_fourier_diff.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_fourier_diff.ipynb <plot_fourier_diff.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_fourier_diff.py <plot_fourier_diff.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_fourier_diff.zip <plot_fourier_diff.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
