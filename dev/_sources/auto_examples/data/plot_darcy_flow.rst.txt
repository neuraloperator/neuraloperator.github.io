
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/data/plot_darcy_flow.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_data_plot_darcy_flow.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_data_plot_darcy_flow.py:


.. _small_darcy_vis :

A simple Darcy-Flow dataset
===========================
An intro to the small Darcy-Flow example dataset we ship with the package.

.. GENERATED FROM PYTHON SOURCE LINES 10-13

Import the library
------------------
We first import our `neuralop` library and required dependencies.

.. GENERATED FROM PYTHON SOURCE LINES 13-18

.. code-block:: Python


    import matplotlib.pyplot as plt
    from neuralop.data.datasets import load_darcy_flow_small
    from neuralop.layers.embeddings import GridEmbedding2D








.. GENERATED FROM PYTHON SOURCE LINES 19-23

Load the dataset
----------------
Training samples are 16x16 and we load testing samples at both 
16x16 and 32x32 (to test resolution invariance).

.. GENERATED FROM PYTHON SOURCE LINES 23-31

.. code-block:: Python


    train_loader, test_loaders, data_processor = load_darcy_flow_small(
            n_train=100, batch_size=4, 
            test_resolutions=[16, 32], n_tests=[50, 50], test_batch_sizes=[4, 2],
            )

    train_dataset = train_loader.dataset





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Loading test db for resolution 16 with 50 samples 
    Loading test db for resolution 32 with 50 samples 




.. GENERATED FROM PYTHON SOURCE LINES 32-34

Visualizing the data
--------------------

.. GENERATED FROM PYTHON SOURCE LINES 34-82

.. code-block:: Python


    for res, test_loader in test_loaders.items():
        print(res)
        # Get first batch
        batch = next(iter(test_loader))
        x = batch['x']
        y = batch['y']

        print(f'Testing samples for res {res} have shape {x.shape[1:]}')


    data = train_dataset[0]
    x = data['x']
    y = data['y']

    print(f'Training samples have shape {x.shape[1:]}')


    # Which sample to view
    index = 0

    data = train_dataset[index]
    data = data_processor.preprocess(data, batched=False)

    # The first step of the default FNO model is a grid-based
    # positional embedding. We will add it manually here to
    # visualize the channels appended by this embedding.
    positional_embedding = GridEmbedding2D(in_channels=1)
    # at train time, data will be collated with a batch dim.
    # we create a batch dim to pass into the embedding, then re-squeeze
    x = positional_embedding(data['x'].unsqueeze(0)).squeeze(0)
    y = data['y']
    fig = plt.figure(figsize=(7, 7))
    ax = fig.add_subplot(2, 2, 1)
    ax.imshow(x[0], cmap='gray')
    ax.set_title('input x')
    ax = fig.add_subplot(2, 2, 2)
    ax.imshow(y.squeeze())
    ax.set_title('input y')
    ax = fig.add_subplot(2, 2, 3)
    ax.imshow(x[1])
    ax.set_title('x: 1st pos embedding')
    ax = fig.add_subplot(2, 2, 4)
    ax.imshow(x[2])
    ax.set_title('x: 2nd pos embedding')
    fig.suptitle('Visualizing one input sample', y=0.98)
    plt.tight_layout()
    fig.show()



.. image-sg:: /auto_examples/data/images/sphx_glr_plot_darcy_flow_001.png
   :alt: Visualizing one input sample, input x, input y, x: 1st pos embedding, x: 2nd pos embedding
   :srcset: /auto_examples/data/images/sphx_glr_plot_darcy_flow_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    16
    Testing samples for res 16 have shape torch.Size([1, 16, 16])
    32
    Testing samples for res 32 have shape torch.Size([1, 32, 32])
    Training samples have shape torch.Size([16, 16])





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.386 seconds)


.. _sphx_glr_download_auto_examples_data_plot_darcy_flow.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_darcy_flow.ipynb <plot_darcy_flow.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_darcy_flow.py <plot_darcy_flow.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_darcy_flow.zip <plot_darcy_flow.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
